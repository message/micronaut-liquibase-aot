plugins {
	id("groovy")
	id("jacoco")
	id("com.github.johnrengelman.shadow") version "7.1.1"
	id("io.micronaut.application") version "3.1.1"
	id("io.micronaut.aot") version "3.1.1"
	id("com.google.cloud.tools.jib") version "3.1.4"
	id("com.github.ben-manes.versions") version "0.39.0"
	id("idea")
}

idea {
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

version = "0.1"
group = "com.example"

repositories {
	mavenCentral()
}

micronaut {
	runtime("netty")
	testRuntime("spock2")
	processing {
		incremental(true)
		annotations("com.example.*")
	}

	aot {
		version.set("1.0.0-M4")
		cacheEnvironment.set(true)
		optimizeServiceLoading.set(true)
		optimizeClassLoading.set(true)
		convertYamlToJava.set(true)
		precomputeOperations.set(true)
	}
}

dependencies {
	// Logging
	runtimeOnly("ch.qos.logback:logback-classic:1.2.8")
	runtimeOnly("org.apache.logging.log4j:log4j-to-slf4j:2.17.0") // To fix ERROR StatusLogger Log4j2 could not find a logging implementation
	implementation("org.slf4j:jul-to-slf4j:1.7.32") // To fix liquibase logging

	// HTTP and Core
	annotationProcessor("io.micronaut:micronaut-http-validation")
	implementation("io.micronaut:micronaut-http-client")
	implementation("io.micronaut:micronaut-runtime")
	implementation("io.micronaut:micronaut-validation")
	implementation("javax.annotation:javax.annotation-api:1.3.2")

	// Reactive
	implementation("io.micronaut.reactor:micronaut-reactor")
	implementation("io.micronaut.reactor:micronaut-reactor-http-client")

	// Database
	annotationProcessor("io.micronaut.data:micronaut-data-processor")
	implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
	implementation("io.micronaut.liquibase:micronaut-liquibase")
	implementation("io.micronaut.sql:micronaut-jdbc-hikari")
	runtimeOnly("org.postgresql:postgresql:42.3.1")

	// OpenAPI
	annotationProcessor("io.micronaut.openapi:micronaut-openapi")
	implementation("io.swagger.core.v3:swagger-annotations:2.1.11")

	// Utils
	implementation("org.apache.commons:commons-lang3:3.12.0") //  ToStringBuilder JSON_STYLE
	compileOnly("com.google.code.findbugs:jsr305:3.0.2") // To fix When.MAYBE notification

	// Testing
	testAnnotationProcessor "io.micronaut:micronaut-inject-java"
	testImplementation "io.micronaut.test:micronaut-test-spock"
	testImplementation("org.spockframework:spock-core") {
		exclude group: "org.codehaus.groovy", module: "groovy-all"
	}

}

check {
	dependsOn jacocoTestCoverageVerification
}

jacocoTestReport {
	dependsOn test
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.0
			}
		}
		rule {
			element = 'CLASS'
			excludes = ["com.example.Application"]
			limit {
				minimum = 0.0
			}
		}
	}
}

application {
	mainClass.set("com.example.Application")
}

java {
	sourceCompatibility = JavaVersion.toVersion("11")
	targetCompatibility = JavaVersion.toVersion("11")
}

jib {
	to {
		image = "gcr.io/myapp/jib-image"
	}
}
